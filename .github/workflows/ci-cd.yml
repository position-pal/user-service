name: Continuous Integration and Delivery

on:
  workflow_call:
  workflow_dispatch:

env:
  GPR_USER: ${{ github.actor }}
  GPR_KEY: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        jvm-version: [ 17, 21 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up JDK ${{ matrix.jvm-version }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jvm-version }}
      - name: Assemble main and test classes
        run: ./gradlew classes testClasses
      - name: Check
        run: ./gradlew check
      - name: Generate fatjar
        run: ./gradlew entrypoint:shadowJar
      - name: Upload fatjar
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.jvm-version == 21 }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: app-fatjar
          path: entrypoint/build/libs/*.jar
          if-no-files-found: error

  dry-delivery:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Download fatjar from uploaded artifact
        uses: dawidd6/action-download-artifact@07ab29fd4a977ae4d2b275087cf67563dfdf0295 # v9
        with:
          workflow: dispatcher.yml
          workflow_conclusion: in_progress
          commit: ${{ github.sha }}
          name: app-fatjar
          path: entrypoint/build/libs/
      - run: ls entrypoint/build/libs/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Build multi-platform dockerfile
        run: docker buildx build --platform linux/amd64,linux/arm64,windows/amd64 .


  release:
    needs: dry-delivery
    if: github.ref_name == github.event.repository.default_branch
    permissions: # Not specified scopes are set to `none`!
      packages: write
      contents: write
      issues: write
      pull-requests: write
    concurrency:
      group: release-and-delivery-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    outputs: # see release.config.js
      release-status: ${{ env.RELEASE_STATUS }}
      release_version: ${{ env.RELEASE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Release
        run: |
          npm install
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.POSITION_PAL_BOT_TOKEN }}

  publish-images:
    needs:
      - release
    # Trigger this job only if the semantic release bot has released a new version
    if: ${{ needs.release.outputs.release-status == 'released' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Download fatjar from uploaded artifact
        uses: dawidd6/action-download-artifact@07ab29fd4a977ae4d2b275087cf67563dfdf0295 # v9
        with:
          workflow: dispatcher.yml
          workflow_conclusion: in_progress
          commit: ${{ github.sha }}
          name: app-fatjar
          path: entrypoint/build/libs/
      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,windows/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.release.outputs.release_version }}

  publish-doc:
    needs:
      - release
    # Trigger this job only if the semantic release bot has released a new version
    if: ${{ needs.release.outputs.release-status == 'released' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ needs.release.outputs.release_version }}
          fetch-tags: true
      - name: Build documentation
        run: ./gradlew dokkaHtmlMultiModule
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4
        with:
          folder: ./build/dokka/htmlMultiModule

  success:
    needs:
      - build
      - dry-delivery
      - release
      - publish-doc
      - publish-images
    if: >- # run if at least one needed job has failed or all needed jobs have not been cancelled
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    runs-on: ubuntu-24.04
    steps:
      - name: Verify no failures occurred in needed jobs
        # if there are failures, false is executed and the job fails.
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
